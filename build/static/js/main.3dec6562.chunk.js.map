{"version":3,"sources":["components/Tutorial.js","components/Bubble.js","components/Bar.js","components/MessageFeed.js","App.js","serviceWorker.js","index.js","logo.svg"],"names":["Tutorial","probs","state","index","console","log","getTutorial","bind","handleClickLeft","handleClickRight","this","tutorial","setState","Container","style","position","top","transform","Card","CardHeader","title","CardContent","minHeight","content","CardActions","Button","size","color","onClick","React","Component","Bubble","commands","default","bot","open","Object","keys","forEach","e","renderText","handleClose","text","Chip","JSON","parse","label","Typography","avatar","startsWith","indexOf","command","substring","text2","Grid","container","direction","alignItems","Modal","aria-labelledby","aria-describedby","onClose","handleClick","handleClick2","handleEnter","value","event","target","keyCode","classes","root","padding","display","width","input","iconButton","divider","height","margin","AppBar","bottom","Toolbar","InputBase","className","placeholder","inputProps","onChange","onKeyDown","MessageFeed","messages","waiting","buttons","componentDidUpdate","handleButtonClick","addMsg","xhr","XMLHttpRequest","addEventListener","responseText","response","undefined","msg","newMessage","slice","push","optional","send","stringify","sender","message","payload","animateScroll","scrollToBottom","id","map","i","key","Bar","useStyles","makeStyles","theme","icon","marginRight","spacing","heroContent","backgroundColor","palette","background","paper","heroButtons","marginTop","cardGrid","paddingTop","paddingBottom","card","flexDirection","cardMedia","cardContent","flexGrow","footer","appBarBot","App","Fragment","CssBaseline","variant","noWrap","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.3dec6562.chunk.js","sourcesContent":["import Chip from \"@material-ui/core/Chip\"\r\nimport Grid from \"@material-ui/core/Grid\"\r\nimport Typography from \"@material-ui/core/Typography\"\r\nimport SchoolOutlined from \"@material-ui/icons/SchoolOutlined\"\r\n\r\nimport Modal from \"@material-ui/core/Modal\"\r\n\r\nimport { Widget } from 'rasa-webchat';\r\n\r\nimport Card from '@material-ui/core/Card';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nimport { red } from '@material-ui/core/colors';\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport ShareIcon from '@material-ui/icons/Share';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\n\r\n\r\n\r\nimport React, { Component } from 'react'\r\nimport { Container } from \"@material-ui/core\"\r\n\r\nclass Tutorial extends React.Component {\r\n\r\n    constructor(probs){\r\n        super(probs);\r\n\r\n        this.state = {...probs, index:0}\r\n\r\n        console.log(this.state);\r\n\r\n        this.getTutorial = this.getTutorial.bind(this);\r\n        this.handleClickLeft = this.handleClickLeft.bind(this);\r\n        this.handleClickRight = this.handleClickRight.bind(this);\r\n    }\r\n\r\n    getTutorial(){\r\n        return this.state.tutorial[this.state.index];\r\n    }\r\n\r\n    handleClickLeft(){\r\n        this.setState({...this.state, index:this.state.index+1});\r\n        \r\n    }  \r\n\r\n    handleClickRight(){\r\n        this.setState({...this.state, index:this.state.index-1});\r\n    }\r\n    \r\n    render() {\r\n        return <Container style={{position:\"absolute\", top:\"50%\", transform:\"translate(0, -50%)\"}}>\r\n        <Card>\r\n            <CardHeader\r\n            title={this.getTutorial().title}\r\n        />\r\n\r\n        <CardContent style={{minHeight:\"300px\"}}>\r\n            {this.getTutorial().content}\r\n        </CardContent>\r\n\r\n        <CardActions>\r\n        <Button size=\"small\" color=\"primary\" onClick={this.handleClickLeft}>\r\n          Previous\r\n        </Button>\r\n        <Button size=\"small\" color=\"primary\" onClick={this.handleClickRight}>\r\n          Next\r\n        </Button>\r\n      </CardActions>\r\n        \r\n        </Card>\r\n        </Container>\r\n        ;\r\n    }\r\n  }\r\n\r\nexport default Tutorial;","import Chip from \"@material-ui/core/Chip\"\r\nimport Grid from \"@material-ui/core/Grid\"\r\nimport Typography from \"@material-ui/core/Typography\"\r\nimport SchoolOutlined from \"@material-ui/icons/SchoolOutlined\"\r\n\r\nimport Modal from \"@material-ui/core/Modal\"\r\n\r\nimport Tutorial from \"./Tutorial\"\r\n\r\n\r\nimport React, { Component } from 'react'\r\n\r\nclass Bubble extends React.Component {\r\n\r\n    commands = {\r\n        tutorial : this.tutorial,\r\n        default : this.default\r\n    }\r\n\r\n    tutorial(text){\r\n        console.log(text);\r\n        return <Chip style={this.style()} onClick={()=> this.setState({...this.state, open:true, tutorial:JSON.parse(text)})} label={<Typography>Here, I found a tutorial for you.</Typography>} avatar={<SchoolOutlined/>}/>;\r\n    }\r\n\r\n    default(text){\r\n        return <Typography style={this.style()}>{text}</Typography>;\r\n    }\r\n\r\n    style = ()=> {\r\n        return {\r\n            'border-radius':\"16px\", \r\n            'background-color': this.probs.bot ? '#eeeeee' : '#005daa',\r\n            'color':this.probs.bot?'black':'white',\r\n            'max-width':'70%',\r\n            'margin':'10px',\r\n            'padding':'10px',\r\n            'padding-top':'6px',\r\n            'padding-bottom':'6px',\r\n        }\r\n    };\r\n\r\n    constructor(probs){\r\n        super(probs);\r\n        this.probs = probs;\r\n        this.state = {...probs, open:false}\r\n\r\n        Object.keys(this.commands).forEach(e => {\r\n            this.commands[e] = this.commands[e].bind(this)\r\n        })\r\n        this.renderText = this.renderText.bind(this);\r\n        this.handleClose = this.handleClose.bind(this);\r\n    }\r\n\r\n    renderText(text){\r\n        if(text.startsWith(\"$\")){\r\n            const index = text.indexOf(\" \");\r\n            const command = text.substring(1, index)\r\n            const text2 = text.substring(index + 1);\r\n            return this.commands[command](text2);\r\n        }\r\n        else\r\n            return this.default(text);\r\n    }\r\n\r\n    handleClose(){\r\n        this.setState({...this.state, open:false});\r\n    }\r\n    \r\n    render() {\r\n        console.log(this.state.text);\r\n\r\n      return <div>\r\n        <Grid container direction=\"column\" alignItems={this.probs.bot?\"flex-start\" : \"flex-end\"}>\r\n            {\r\n                this.renderText(this.probs.text)\r\n            }\r\n            <Modal\r\n                aria-labelledby=\"simple-modal-title\"\r\n                aria-describedby=\"simple-modal-description\"\r\n                open={this.state.open}\r\n                onClose={this.handleClose}\r\n            >\r\n                <Tutorial tutorial={this.state.tutorial} />\r\n            </Modal>\r\n\r\n        </Grid></div>;\r\n    }\r\n  }\r\n\r\nexport default Bubble;","import Chip from \"@material-ui/core/Chip\"\r\nimport Grid from \"@material-ui/core/Grid\"\r\nimport TextField from \"@material-ui/core/TextField\"\r\nimport Toolbar from \"@material-ui/core/Toolbar\"\r\n\r\nimport Paper from '@material-ui/core/Paper';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Button from \"@material-ui/core/Button\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\n\r\n\r\n\r\nimport React, { Component } from 'react'\r\n\r\nclass Bubble extends React.Component {\r\n\r\n    constructor(probs){\r\n        super(probs);\r\n        this.state = {...probs}\r\n\r\n        this.handleClick = this.handleClick.bind(this);\r\n        this.handleClick2 = this.handleClick2.bind(this);\r\n        this.handleEnter = this.handleEnter.bind(this);\r\n\r\n\r\n    }\r\n\r\n    handleClick(){\r\n        if(this.state.value !== \"\"){\r\n            this.state.onClick(this.state.value)\r\n            this.state.value = \"\";    \r\n        }\r\n    }\r\n\r\n    handleClick2(event){\r\n        this.setState({...this.state, value:event.target.value})\r\n    }\r\n\r\n    handleEnter(event){\r\n        if(event.keyCode == 13){\r\n            this.handleClick();\r\n        }\r\n\r\n        \r\n    }\r\n    \r\n    render() {\r\n\r\n\r\n        const useStyles = () => ({\r\n            root: {\r\n                padding: '2px 4px',\r\n                display: 'flex',\r\n                alignItems: 'center',\r\n                width: 400,\r\n            },\r\n            input: {\r\n                \r\n            },\r\n            iconButton: {\r\n                padding: 10,\r\n            },\r\n            divider: {\r\n                height: 28,\r\n                margin: 4,\r\n            },\r\n        });\r\n\r\n        const classes = useStyles();\r\n\r\n        \r\n\r\n    return <AppBar style={{\r\n        top: 'auto',\r\n        bottom: 0\r\n      }}>\r\n    <Toolbar >\r\n            \r\n            <InputBase\r\n                className={classes.input}\r\n                placeholder=\"Ask me anything\"\r\n                inputProps={{ 'aria-label': 'search google maps' }}\r\n                style={{width:\"100%\", color:\"white\"}}\r\n                value={this.state.value}\r\n                onChange={this.handleClick2}\r\n                onKeyDown={this.handleEnter}\r\n\r\n            />\r\n            <Button label=\"send\" onClick={this.handleClick}  style={{'background-color':\"#ffd200\"}}>Send</Button>\r\n            \r\n      \r\n        </Toolbar>\r\n        </AppBar>\r\n        \r\n    }\r\n  }\r\n\r\nexport default Bubble;","import React, { Component,  useEffect, useRef  } from 'react'\r\nimport Bubble from './Bubble'\r\nimport Bar from './Bar'\r\n\r\nimport { animateScroll } from \"react-scroll\";\r\nimport socketIOClient from \"socket.io-client\";\r\nimport Chip from \"@material-ui/core/Chip\"\r\n\r\n\r\n\r\nclass MessageFeed extends React.Component {\r\n    constructor(probs){\r\n        super(probs);\r\n        this.state = {messages : probs.messages, waiting:false, buttons:[]}\r\n\r\n        this.handleClick = this.handleClick.bind(this);\r\n        this.componentDidUpdate = this.componentDidUpdate.bind(this);\r\n        this.handleButtonClick = this.handleButtonClick.bind(this);\r\n        this.addMsg = this.addMsg.bind(this);\r\n\r\n        this.xhr = new XMLHttpRequest()\r\n\r\n        // get a callback when the server responds\r\n        this.xhr.addEventListener('load', () => {\r\n        // update the state of the component with the result here\r\n            console.log(this.xhr.responseText);\r\n            JSON.parse(this.xhr.responseText).forEach(e => {\r\n                let response = e.text;\r\n                console.log(response);\r\n                if(response == null || response == \"utter_default\") \r\n                    response = '$tutorial [{\"title\":\"step one\", \"content\":\"hi there\"}, {\"title\":\"step two\", \"content\":\"hi there\"}]';\r\n\r\n                this.addMsg({text:response, bot:true});\r\n\r\n                if(e.buttons != null || e.buttons != undefined){\r\n                    this.setState({...this.state, buttons:e.buttons});\r\n                }\r\n            });\r\n            \r\n            \r\n        })\r\n\r\n        this.xhr.addEventListener('error', ()=>{\r\n            this.addMsg({text:'$tutorial [{\"title\":\"step one\", \"content\":\"hi there\"}, {\"title\":\"step two\", \"content\":\"hi there\"}]', bot:true});\r\n        })\r\n\r\n        \r\n        \r\n    }\r\n\r\n    addMsg(msg){\r\n        const newMessage = this.state.messages.slice();\r\n        newMessage.push(msg);\r\n        this.setState({...this.state, messages:newMessage, waiting:false})\r\n    }\r\n\r\n    \r\n\r\n    handleClick(msg, optional){\r\n        if(optional === undefined){\r\n            optional = msg;\r\n        }\r\n\r\n        this.addMsg({text:optional, bot:false})\r\n        // open the request with the verb and the url\r\n        \r\n        // send the request\r\n        this.xhr.open('POST', 'http://35.245.31.192/api')\r\n        this.xhr.send(JSON.stringify({ sender: \"sup\",  message:msg}));\r\n    }\r\n\r\n    handleButtonClick(title, payload){\r\n        this.handleClick(title + payload, title);\r\n        this.setState({buttons:[]});\r\n    }\r\n\r\n    scrollToBottom() {\r\n        animateScroll.scrollToBottom();\r\n    }\r\n\r\n    componentDidUpdate(){\r\n        this.scrollToBottom();\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.scrollToBottom();\r\n    }\r\n    \r\n    \r\n    render() {\r\n        console.log(this.state.messages);\r\n\r\n        const message = this.state.messages.slice();\r\n\r\n        \r\n\r\n        return <div id=\"jsjsjsjsj\" style={{'margin-bottom':\"75px\"}}>\r\n            {\r\n                message.map((value, i) => {\r\n                    console.log(value.text);\r\n                    return <Bubble key={i} {...value}></Bubble>;\r\n                })\r\n            }\r\n\r\n            {\r\n                this.state.buttons.map(e=> {\r\n                    return <Chip style={{margin:\"10px\", 'margin-right':\"0px\", 'background-color': \"#ffd200\"}} label={e.title} onClick={()=> this.handleButtonClick(e.title, e.payload)}/>;\r\n                })\r\n            }\r\n\r\n        \r\n            <Bar onClick={this.handleClick}/>\r\n        </div>;\r\n    }\r\n  }\r\n\r\nexport default MessageFeed;","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\nimport Bubble from \"./components/Bubble\";\n\nimport Bar from \"./components/Bar\"\nimport AppBar from '@material-ui/core/AppBar';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport MessageFeed from './components/MessageFeed'\n\n\nimport Link from '@material-ui/core/Link';\n\nconst useStyles = makeStyles(theme => ({\n  icon: {\n    marginRight: theme.spacing(2),\n  },\n  heroContent: {\n    backgroundColor: theme.palette.background.paper,\n    padding: theme.spacing(8, 0, 6),\n  },\n  heroButtons: {\n    marginTop: theme.spacing(4),\n  },\n  cardGrid: {\n    paddingTop: theme.spacing(8),\n    paddingBottom: theme.spacing(8),\n  },\n  paper: {\n    paddingBottom: 50,\n  },\n  card: {\n    height: '100%',\n    display: 'flex',\n    flexDirection: 'column',\n  },\n  cardMedia: {\n    paddingTop: '56.25%', // 16:9\n  },\n  cardContent: {\n    flexGrow: 1,\n  },\n  footer: {\n    backgroundColor: theme.palette.background.paper,\n    padding: theme.spacing(6),\n  },\n  appBarBot: {\n    top: 'auto',\n    bottom: 0\n  }\n}));\n\nconst cards = [1, 2, 3, 4, 5, 6, 7, 8, 9];\n\nconst mess = [{text:\"hi therehi therehi therehi therehi therehi therehi therehi therehi therehi therehi therehi therehi therehi therehi therehi therehi therehi therehi therehi therehi therehi therehi therehi therehi therehi therehi therehi therehi therehi therehi therehi therehi therehi therehi therehi therehi therehi therehi therehi therehi therehi therehi therehi therehi therehi therehi therehi therehi therehi therehi therehi therehi therehi therehi therehi therehi therehi therehi therehi therehi therehi therehi therehi there\", bot:true}, {text:\"how doing\", bot:false},{text:\"hi there\", bot:true}, {text:\"how doing\", bot:false},{text:\"hi there\", bot:true}, {text:\"how doing\", bot:false},{text:\"hi there\", bot:true}, {text:\"how doing\", bot:false},{text:\"hi there\", bot:true}, {text:\"how doing\", bot:false},{text:\"hi there\", bot:true}, {text:\"how doing\", bot:false},{text:\"hi there\", bot:true}, {text:\"how doing\", bot:false},{text:\"hi there\", bot:true}, {text:\"how doing\", bot:false},{text:\"hi there\", bot:true}, {text:\"how doing\", bot:false},{text:\"hi there\", bot:true}, {text:\"how doing\", bot:false},{text:\"hi there\", bot:true}, {text:\"how doing\", bot:false},{text:\"hi there\", bot:true}, {text:\"how doing\", bot:false},{text:\"hi there\", bot:true}, {text:\"how doing\", bot:false},{text:\"hi there\", bot:true}, {text:\"how doing\", bot:false},{text:\"hi there\", bot:true}, {text:\"how doing\", bot:false},{text:\"hi there\", bot:true}, {text:\"how doing\", bot:false},\n]\n\nfunction App() {\n  const classes = useStyles();\n  \n  return (\n    <React.Fragment>\n      <CssBaseline />\n      <AppBar position=\"sticky\">\n        <Toolbar>\n          <Typography variant=\"h6\" color=\"inherit\" noWrap>\n            Conobot\n          </Typography>\n        </Toolbar>\n      </AppBar>\n\n      <MessageFeed messages={[]} />\n        \n    </React.Fragment>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";"],"sourceRoot":""}